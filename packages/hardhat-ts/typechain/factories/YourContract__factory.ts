/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { YourContract, YourContractInterface } from "../YourContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "purpose",
        type: "string",
      },
    ],
    name: "SetPurpose",
    type: "event",
  },
  {
    inputs: [],
    name: "purpose",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newPurpose",
        type: "string",
      },
    ],
    name: "setPurpose",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280601c81526020017f4275696c64696e6720556e73746f707061626c652041707073212121000000008152506000908051906020019061004f929190610062565b5034801561005c57600080fd5b50610166565b82805461006e90610134565b90600052602060002090601f01602090048101928261009057600085556100d7565b82601f106100a957805160ff19168380011785556100d7565b828001600101855582156100d7579182015b828111156100d65782518255916020019190600101906100bb565b5b5090506100e491906100e8565b5090565b5b808211156101015760008160009055506001016100e9565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061014c57607f821691505b602082108114156101605761015f610105565b5b50919050565b6107bb806101756000396000f3fe6080604052600436106100295760003560e01c806370740aab1461002e578063eb68757f14610059575b600080fd5b34801561003a57600080fd5b50610043610075565b6040516100509190610425565b60405180910390f35b610073600480360381019061006e9190610590565b610103565b005b6000805461008290610608565b80601f01602080910402602001604051908101604052809291908181526020018280546100ae90610608565b80156100fb5780601f106100d0576101008083540402835291602001916100fb565b820191906000526020600020905b8154815290600101906020018083116100de57829003601f168201915b505050505081565b80600090805190602001906101199291906102e9565b506101e4336040518060400160405280600e81526020017f73657420707572706f736520746f0000000000000000000000000000000000008152506000805461016190610608565b80601f016020809104026020016040519081016040528092919081815260200182805461018d90610608565b80156101da5780601f106101af576101008083540402835291602001916101da565b820191906000526020600020905b8154815290600101906020018083116101bd57829003601f168201915b5050505050610221565b7f6ea5d6383a120235c7728a9a6751672a8ac068e4ed34dcca2ee444182c1812de336000604051610216929190610710565b60405180910390a150565b6102bb83838360405160240161023993929190610740565b6040516020818303038152906040527ffb772265000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506102c0565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546102f590610608565b90600052602060002090601f016020900481019282610317576000855561035e565b82601f1061033057805160ff191683800117855561035e565b8280016001018555821561035e579182015b8281111561035d578251825591602001919060010190610342565b5b50905061036b919061036f565b5090565b5b80821115610388576000816000905550600101610370565b5090565b600081519050919050565b600082825260208201905092915050565b60005b838110156103c65780820151818401526020810190506103ab565b838111156103d5576000848401525b50505050565b6000601f19601f8301169050919050565b60006103f78261038c565b6104018185610397565b93506104118185602086016103a8565b61041a816103db565b840191505092915050565b6000602082019050818103600083015261043f81846103ec565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61049d826103db565b810181811067ffffffffffffffff821117156104bc576104bb610465565b5b80604052505050565b60006104cf610447565b90506104db8282610494565b919050565b600067ffffffffffffffff8211156104fb576104fa610465565b5b610504826103db565b9050602081019050919050565b82818337600083830152505050565b600061053361052e846104e0565b6104c5565b90508281526020810184848401111561054f5761054e610460565b5b61055a848285610511565b509392505050565b600082601f8301126105775761057661045b565b5b8135610587848260208601610520565b91505092915050565b6000602082840312156105a6576105a5610451565b5b600082013567ffffffffffffffff8111156105c4576105c3610456565b5b6105d084828501610562565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061062057607f821691505b60208210811415610634576106336105d9565b5b50919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106658261063a565b9050919050565b6106758161065a565b82525050565b60008190508160005260206000209050919050565b6000815461069d81610608565b6106a78186610397565b945060018216600081146106c257600181146106d457610707565b60ff1983168652602086019350610707565b6106dd8561067b565b60005b838110156106ff578154818901526001820191506020810190506106e0565b808801955050505b50505092915050565b6000604082019050610725600083018561066c565b81810360208301526107378184610690565b90509392505050565b6000606082019050610755600083018661066c565b818103602083015261076781856103ec565b9050818103604083015261077b81846103ec565b905094935050505056fea26469706673582212203e4aa2744f4aa0baee72c647b4f181c2b5fbefbda336526588d56dca4816bea864736f6c63430008090033";

type YourContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YourContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YourContract__factory extends ContractFactory {
  constructor(...args: YourContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YourContract";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YourContract> {
    return super.deploy(overrides || {}) as Promise<YourContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): YourContract {
    return super.attach(address) as YourContract;
  }
  connect(signer: Signer): YourContract__factory {
    return super.connect(signer) as YourContract__factory;
  }
  static readonly contractName: "YourContract";
  public readonly contractName: "YourContract";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourContractInterface {
    return new utils.Interface(_abi) as YourContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YourContract {
    return new Contract(address, _abi, signerOrProvider) as YourContract;
  }
}
