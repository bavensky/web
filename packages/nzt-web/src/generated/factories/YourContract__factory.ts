/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { YourContract, YourContractInterface } from "../YourContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "purpose",
        type: "string",
      },
    ],
    name: "SetPurpose",
    type: "event",
  },
  {
    inputs: [],
    name: "getPurpose",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purpose",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newPurpose",
        type: "string",
      },
    ],
    name: "setPurpose",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newPurpose",
        type: "string",
      },
    ],
    name: "setPurpose2",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052601c60808190527f4275696c64696e6720556e73746f707061626c6520417070732121210000000060a090815261003e9160009190610051565b5034801561004b57600080fd5b50610125565b82805461005d906100ea565b90600052602060002090601f01602090048101928261007f57600085556100c5565b82601f1061009857805160ff19168380011785556100c5565b828001600101855582156100c5579182015b828111156100c55782518255916020019190600101906100aa565b506100d19291506100d5565b5090565b5b808211156100d157600081556001016100d6565b600181811c908216806100fe57607f821691505b6020821081141561011f57634e487b7160e01b600052602260045260246000fd5b50919050565b610663806101346000396000f3fe60806040526004361061003f5760003560e01c8063669554eb1461004457806370740aab146100595780638456062514610084578063eb68757f14610044575b600080fd5b6100576100523660046103cb565b610099565b005b34801561006557600080fd5b5061006e6101a5565b60405161007b91906105c2565b60405180910390f35b34801561009057600080fd5b5061006e610233565b80516100ac906000906020840190610332565b50610168336040518060400160405280600e81526020016d73657420707572706f736520746f60901b815250600080546100e5906105dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610111906105dc565b801561015e5780601f106101335761010080835404028352916020019161015e565b820191906000526020600020905b81548152906001019060200180831161014157829003601f168201915b50505050506102c5565b7f6ea5d6383a120235c7728a9a6751672a8ac068e4ed34dcca2ee444182c1812de33600060405161019a929190610509565b60405180910390a150565b600080546101b2906105dc565b80601f01602080910402602001604051908101604052809291908181526020018280546101de906105dc565b801561022b5780601f106102005761010080835404028352916020019161022b565b820191906000526020600020905b81548152906001019060200180831161020e57829003601f168201915b505050505081565b606060008054610242906105dc565b80601f016020809104026020016040519081016040528092919081815260200182805461026e906105dc565b80156102bb5780601f10610290576101008083540402835291602001916102bb565b820191906000526020600020905b81548152906001019060200180831161029e57829003601f168201915b5050505050905090565b61030c8383836040516024016102dd939291906104c9565b60408051601f198184030181529190526020810180516001600160e01b031663fb77226560e01b179052610311565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805461033e906105dc565b90600052602060002090601f01602090048101928261036057600085556103a6565b82601f1061037957805160ff19168380011785556103a6565b828001600101855582156103a6579182015b828111156103a657825182559160200191906001019061038b565b506103b29291506103b6565b5090565b5b808211156103b257600081556001016103b7565b6000602082840312156103dd57600080fd5b813567ffffffffffffffff808211156103f557600080fd5b818401915084601f83011261040957600080fd5b81358181111561041b5761041b610617565b604051601f8201601f19908116603f0116810190838211818310171561044357610443610617565b8160405282815287602084870101111561045c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b818110156104a257602081850181015186830182015201610486565b818111156104b4576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b03841681526060602082018190526000906104ed9083018561047c565b82810360408401526104ff818561047c565b9695505050505050565b60018060a01b0383168152600060206040818401526000845481600182811c91508083168061053957607f831692505b85831081141561055757634e487b7160e01b85526022600452602485fd5b60408801839052606088018180156105765760018114610587576105b2565b60ff198616825287820196506105b2565b60008b81526020902060005b868110156105ac57815484820152908501908901610593565b83019750505b50949a9950505050505050505050565b6020815260006105d5602083018461047c565b9392505050565b600181811c908216806105f057607f821691505b6020821081141561061157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea264697066735822122007d4c86fdb30ab84523165c7170facfbc3a113a06d3c0a8a6f9d7b2aaedb550064736f6c63430008060033";

type YourContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YourContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YourContract__factory extends ContractFactory {
  constructor(...args: YourContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YourContract";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YourContract> {
    return super.deploy(overrides || {}) as Promise<YourContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): YourContract {
    return super.attach(address) as YourContract;
  }
  connect(signer: Signer): YourContract__factory {
    return super.connect(signer) as YourContract__factory;
  }
  static readonly contractName: "YourContract";
  public readonly contractName: "YourContract";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourContractInterface {
    return new utils.Interface(_abi) as YourContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YourContract {
    return new Contract(address, _abi, signerOrProvider) as YourContract;
  }
}
